name: AASM build

on:
  push:
    tags:
      - v*.**

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        build:
          - name: "Ark-Ascended-Server-Manager.exe"
            platform: windows/amd64
            os: windows-latest
    runs-on: ${{ matrix.build.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set direct proxy
        run: go env -w GOPROXY=direct
      - run: go install github.com/wailsapp/wails/cmd/wails@latest
      - uses: dAppServer/wails-build-action@v2.2
        with:
          build-name: ${{ matrix.build.name }}
          build-platform: ${{ matrix.build.platform }}
          build: true
          nsis: true
          package: true
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: AASM Installer
          path: build/bin/*.exe
      - name: Upload Release Assets
        run: |
          gh api repos/dAppServer/Ark-Ascended-Server-Manager/releases/tags/${{ github.ref }} \
            -f "release_id=$(gh api repos/dAppServer/Ark-Ascended-Server-Manager/releases/tags/${{ github.ref }} | jq -r .id)" \
            -f "name=Ark-Ascended-Server-Manager.exe" \
            -f "label=Win64-Standalone" \
            -f "data=@build/bin/Ark-Ascended-Server-Manager.exe"
          gh api repos/dAppServer/Ark-Ascended-Server-Manager/releases/tags/${{ github.ref }} \
            -f "release_id=$(gh api repos/dAppServer/Ark-Ascended-Server-Manager/releases/tags/${{ github.ref }} | jq -r .id)" \
            -f "name=Ark-Ascended-Server-Manager-amd64-installer.exe" \
            -f "label=Win64-Installer"
            -f "data=@build/bin/Ark-Ascended-Server-Manager-amd64-installer.exe"